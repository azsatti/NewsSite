<?xml version="1.0"?>
<doc>
    <assembly>
        <name>News.API</name>
    </assembly>
    <members>
        <member name="T:News.API.Controllers.NewsController">
            <summary>
            News controller
            </summary>
        </member>
        <member name="M:News.API.Controllers.NewsController.#ctor(News.DataAccess.IDataRepository{News.Entity.NewsArticle,System.Int64},Microsoft.Extensions.Logging.ILogger{News.API.Controllers.NewsController})">
            <summary>
            Constructor
            </summary>
            <param name="repo"></param>
        </member>
        <member name="M:News.API.Controllers.NewsController.GetAll">
            <summary>
            Gets All news
            </summary>
            <remarks>// GET: api/news</remarks>
            <returns></returns>
        </member>
        <member name="M:News.API.Controllers.NewsController.GetById(System.Int64)">
            <summary>
            Get News By Id
            </summary>
            <remarks>
            // GET api/news/5
            </remarks>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:News.API.Controllers.NewsController.Create(News.Entity.NewsArticle)">
            <summary>
            Adds a new article to news list
            </summary>
            <param name="newsArticle"></param>
            <returns>Returns the newly created news artile</returns>
            <response code="201">Returns the newly created news artile</response>
            <response code="400">If the news article is null</response>  
        </member>
        <member name="M:News.API.Controllers.NewsController.Put(System.Int64,News.Entity.NewsArticle)">
            <summary>
            Updates existing news article
            </summary>
            <remarks>PUT api/news/5</remarks>
            <param name="id"></param>
            <param name="newsArticle"></param>
            <returns></returns>
        </member>
        <member name="M:News.API.Controllers.NewsController.Delete(System.Int64)">
            <summary>
            Delete an existing news article
            </summary>
            <remarks>DELETE api/news/5</remarks>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:News.API.Handlers.ApiKeyMiddleware">
            <summary>
            
            </summary>
        </member>
        <member name="M:News.API.Handlers.ApiKeyMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Constructor
            </summary>
            <param name="next"></param>
            <param name="loggerFactory"></param>
        </member>
        <member name="M:News.API.Handlers.ApiKeyMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            This method will handle any custom logic we want to apply for APIKey.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
    </members>
</doc>
